<?xml version="1.0"?>
<FindBugsFilter>
  <Match>
    <Or>
      <!-- Proper handling of CRLF needs to be insured through Logback config. -->
      <Bug pattern="CRLF_INJECTION_LOGS" />
      <!-- While correct, the high number of matches overshadows other, more
          important issues. -->
      <Bug pattern="EI_EXPOSE_REP" />
      <Bug pattern="EI_EXPOSE_REP2" />
      <!-- Synchronization-related issues are ignored for now but should be
          handled in the future. -->
      <Bug pattern="JLM_JSR166_UTILCONCURRENT_MONITORENTER" />
      <!-- Produces false positives because it does not support
          Objects.requireNonNull.
          See: https://github.com/spotbugs/spotbugs/issues/456 -->
      <Bug pattern="NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE" />
      <And>
        <!-- Generated class files for aspects contain this null check. -->
        <Bug pattern="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE" />
        <Class name="~.*Aspect" />
      </And>
    </Or>
  </Match>
  <Match>
    <Source name="~.*\.kt" />
    <Or>
      <!-- Class files generated by the Kotlin compiler generate false positives
          for the following bugs. -->
      <Bug pattern="BC_BAD_CAST_TO_ABSTRACT_COLLECTION" />
      <Bug pattern="NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE" />
      <Bug pattern="NP_PARAMETER_MUST_BE_NONNULL_BUT_MARKED_AS_NULLABLE" />
      <And>
        <!-- Ignore generated fields. -->
        <Bug pattern="SE_BAD_FIELD" />
        <Class name="~.*\$[0-9]+" />
        <Field name="~\$.*" />
      </And>
    </Or>
  </Match>
</FindBugsFilter>
