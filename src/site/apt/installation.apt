 -----
 Installation Instructions
 -----
 ARSnova Developers
 -----
 -----

 
Deployment

 You will need to do some configuration work upfront.

  * Add a new directory "arsnova" in /etc and create a copy of arsnova.properties.example named arsnova.properties in this directory.
  
  * Change settings to match your environment

Server configuration

 In order to build up a full featured server installation containing ARSnova2 and CouchDB you have to install at least the following services:
  
  * Apache Tomcat 7.0.29 (or newer)
  
  * Apache Webserver 2.2 or newer with buildin mod_proxy, mod_proxy_ajp and mod_proxy_http
  
  * Apache CouchDB
 
 Make sure all services are installed. Next step is to configure the Apache Webserver. Find the configuration file or create a new one for use with a virtal host. This depends on your needs. At least you should have a configuration containing these settings:

+--------------------------------------------------------+
	
	<Location /couchdb/>
		ProxyPass http://127.0.0.1:5984/
		ProxyPassReverse http://127.0.0.1:5984/
	</Location> 
	
	<Location />
		ProxyPass ajp://127.0.0.1:8009/
		ProxyPassReverse ajp://127.0.0.1:8009/
	</Location>
	
+--------------------------------------------------------+

 This will redirect all requests for "/couchdb/..." to your Apache CouchDB server, running on port 5984.
 All other requests will be send to your Apache Tomcat servelt container, using AJP running on port 8009.

 To enable the needed Apache Webserver simply type:

+---------------------------+
 
  # a2enmod proxy
  # a2enmod proxy_ajp
  # a2enmod proxy_http
 
+---------------------------+

 The configuration is ready for development usage. You should (re)start all services. ARSnova2 is now listening on HTTP port 80.

Make environment usable for productive usage

 If you intend to use ARSnova in productive environment, you will have to change a setting in your Tomcat installation.
 Look for your Tomcat configuration directory and change the file "context.xml" to match this example:
 
+---------------------------+
 
<Context>
	<Manager pathname="<...your_tomcat_installation...>/sessions/arsnova.ser"/>
</Context> 
 
+---------------------------+
 
 This will enable session persistance across restarts as described {{{http://tomcat.apache.org/tomcat-7.0-doc/config/manager.html#Special_Features}here}}.

 To protect requests and responses you should use HTTPS and configure your Apache Webserver installation to redirect all traffic according to this
 {{{http://wiki.apache.org/httpd/RedirectSSL}example}}.

 Finally you should (re)start all services. ARSnova2 is now listening on HTTP port 80 and 443.
 
Securing your websocket connection

 To provide SSL websocket encryption, you have to provide the servers ssl key and certificate in a Java keystore. The following steps will guide you threw this process.
 
 Use your webserver certificate, private key and certificate chain to create a PKCS12 keystore

+---------------------------+
openssl pkcs12 -export -in <servercert>.crt -inkey <serverkey>.key \
               -out keystore.p12 -name 1 \
               -certfile <your_cert_chain_file>
+---------------------------+

 You will be asked for a password for your PKCS12 keystore. This password must be used for importing this keystore into your java keystore.
 The import can be done by using this command:

+---------------------------+
keytool -importkeystore \
        -deststorepass <your_java_keystore_password> -destkeypass <your_java_keystore_password> -destkeystore arsnova.jks \
        -srckeystore keystore.p12 -srcstoretype PKCS12 -srcstorepass <your_pkcs12_keystore_password> \
        -alias 1
+---------------------------+
 
 Be sure to provide the correct certificate and key file names and to use the correct passwords for your keystore.
 
 The last step is to find your ARSnova configuration file, setup the location of your Java keystore and its password.
 
+---------------------------+
 
security.ssl=true
security.keystore=<your keystore location>
security.storepass=<your keystore password>
 
+---------------------------+
 